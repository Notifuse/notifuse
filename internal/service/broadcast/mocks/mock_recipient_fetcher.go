// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/service/broadcast (interfaces: RecipientFetcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockRecipientFetcher is a mock of RecipientFetcher interface.
type MockRecipientFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockRecipientFetcherMockRecorder
}

// MockRecipientFetcherMockRecorder is the mock recorder for MockRecipientFetcher.
type MockRecipientFetcherMockRecorder struct {
	mock *MockRecipientFetcher
}

// NewMockRecipientFetcher creates a new mock instance.
func NewMockRecipientFetcher(ctrl *gomock.Controller) *MockRecipientFetcher {
	mock := &MockRecipientFetcher{ctrl: ctrl}
	mock.recorder = &MockRecipientFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecipientFetcher) EXPECT() *MockRecipientFetcherMockRecorder {
	return m.recorder
}

// FetchBatch mocks base method.
func (m *MockRecipientFetcher) FetchBatch(arg0 context.Context, arg1, arg2 string, arg3, arg4 int) ([]*domain.ContactWithList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchBatch", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]*domain.ContactWithList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchBatch indicates an expected call of FetchBatch.
func (mr *MockRecipientFetcherMockRecorder) FetchBatch(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchBatch", reflect.TypeOf((*MockRecipientFetcher)(nil).FetchBatch), arg0, arg1, arg2, arg3, arg4)
}

// GetTotalRecipientCount mocks base method.
func (m *MockRecipientFetcher) GetTotalRecipientCount(arg0 context.Context, arg1, arg2 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalRecipientCount", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalRecipientCount indicates an expected call of GetTotalRecipientCount.
func (mr *MockRecipientFetcherMockRecorder) GetTotalRecipientCount(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalRecipientCount", reflect.TypeOf((*MockRecipientFetcher)(nil).GetTotalRecipientCount), arg0, arg1, arg2)
}
