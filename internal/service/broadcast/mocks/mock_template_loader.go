// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/service/broadcast (interfaces: TemplateLoader)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockTemplateLoader is a mock of TemplateLoader interface.
type MockTemplateLoader struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateLoaderMockRecorder
}

// MockTemplateLoaderMockRecorder is the mock recorder for MockTemplateLoader.
type MockTemplateLoaderMockRecorder struct {
	mock *MockTemplateLoader
}

// NewMockTemplateLoader creates a new mock instance.
func NewMockTemplateLoader(ctrl *gomock.Controller) *MockTemplateLoader {
	mock := &MockTemplateLoader{ctrl: ctrl}
	mock.recorder = &MockTemplateLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTemplateLoader) EXPECT() *MockTemplateLoaderMockRecorder {
	return m.recorder
}

// LoadTemplatesForBroadcast mocks base method.
func (m *MockTemplateLoader) LoadTemplatesForBroadcast(arg0 context.Context, arg1, arg2 string) (map[string]*domain.Template, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadTemplatesForBroadcast", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]*domain.Template)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadTemplatesForBroadcast indicates an expected call of LoadTemplatesForBroadcast.
func (mr *MockTemplateLoaderMockRecorder) LoadTemplatesForBroadcast(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadTemplatesForBroadcast", reflect.TypeOf((*MockTemplateLoader)(nil).LoadTemplatesForBroadcast), arg0, arg1, arg2)
}

// ValidateTemplates mocks base method.
func (m *MockTemplateLoader) ValidateTemplates(arg0 map[string]*domain.Template) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateTemplates", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateTemplates indicates an expected call of ValidateTemplates.
func (mr *MockTemplateLoaderMockRecorder) ValidateTemplates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateTemplates", reflect.TypeOf((*MockTemplateLoader)(nil).ValidateTemplates), arg0)
}
