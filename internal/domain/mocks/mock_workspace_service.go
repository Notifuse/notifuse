// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/domain (interfaces: WorkspaceServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockWorkspaceServiceInterface is a mock of WorkspaceServiceInterface interface.
type MockWorkspaceServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWorkspaceServiceInterfaceMockRecorder
}

// MockWorkspaceServiceInterfaceMockRecorder is the mock recorder for MockWorkspaceServiceInterface.
type MockWorkspaceServiceInterfaceMockRecorder struct {
	mock *MockWorkspaceServiceInterface
}

// NewMockWorkspaceServiceInterface creates a new mock instance.
func NewMockWorkspaceServiceInterface(ctrl *gomock.Controller) *MockWorkspaceServiceInterface {
	mock := &MockWorkspaceServiceInterface{ctrl: ctrl}
	mock.recorder = &MockWorkspaceServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkspaceServiceInterface) EXPECT() *MockWorkspaceServiceInterfaceMockRecorder {
	return m.recorder
}

// AcceptInvitation mocks base method.
func (m *MockWorkspaceServiceInterface) AcceptInvitation(arg0 context.Context, arg1, arg2, arg3 string) (*domain.AuthResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AcceptInvitation", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.AuthResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcceptInvitation indicates an expected call of AcceptInvitation.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) AcceptInvitation(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcceptInvitation", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).AcceptInvitation), arg0, arg1, arg2, arg3)
}

// AddUserToWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) AddUserToWorkspace(arg0 context.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUserToWorkspace", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUserToWorkspace indicates an expected call of AddUserToWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) AddUserToWorkspace(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUserToWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).AddUserToWorkspace), arg0, arg1, arg2, arg3)
}

// CreateAPIKey mocks base method.
func (m *MockWorkspaceServiceInterface) CreateAPIKey(arg0 context.Context, arg1, arg2 string) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateAPIKey indicates an expected call of CreateAPIKey.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) CreateAPIKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).CreateAPIKey), arg0, arg1, arg2)
}

// CreateIntegration mocks base method.
func (m *MockWorkspaceServiceInterface) CreateIntegration(arg0 context.Context, arg1, arg2 string, arg3 domain.IntegrationType, arg4 domain.EmailProvider) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIntegration", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIntegration indicates an expected call of CreateIntegration.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) CreateIntegration(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIntegration", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).CreateIntegration), arg0, arg1, arg2, arg3, arg4)
}

// CreateWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) CreateWorkspace(arg0 context.Context, arg1, arg2, arg3, arg4, arg5, arg6 string, arg7 domain.FileManagerSettings) (*domain.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWorkspace", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(*domain.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWorkspace indicates an expected call of CreateWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) CreateWorkspace(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).CreateWorkspace), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// DeleteIntegration mocks base method.
func (m *MockWorkspaceServiceInterface) DeleteIntegration(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteIntegration", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteIntegration indicates an expected call of DeleteIntegration.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) DeleteIntegration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteIntegration", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).DeleteIntegration), arg0, arg1, arg2)
}

// DeleteWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) DeleteWorkspace(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWorkspace", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWorkspace indicates an expected call of DeleteWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) DeleteWorkspace(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).DeleteWorkspace), arg0, arg1)
}

// GetInvitationByID mocks base method.
func (m *MockWorkspaceServiceInterface) GetInvitationByID(arg0 context.Context, arg1 string) (*domain.WorkspaceInvitation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvitationByID", arg0, arg1)
	ret0, _ := ret[0].(*domain.WorkspaceInvitation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInvitationByID indicates an expected call of GetInvitationByID.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) GetInvitationByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvitationByID", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).GetInvitationByID), arg0, arg1)
}

// GetWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) GetWorkspace(arg0 context.Context, arg1 string) (*domain.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkspace", arg0, arg1)
	ret0, _ := ret[0].(*domain.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkspace indicates an expected call of GetWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) GetWorkspace(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).GetWorkspace), arg0, arg1)
}

// GetWorkspaceMembersWithEmail mocks base method.
func (m *MockWorkspaceServiceInterface) GetWorkspaceMembersWithEmail(arg0 context.Context, arg1 string) ([]*domain.UserWorkspaceWithEmail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkspaceMembersWithEmail", arg0, arg1)
	ret0, _ := ret[0].([]*domain.UserWorkspaceWithEmail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkspaceMembersWithEmail indicates an expected call of GetWorkspaceMembersWithEmail.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) GetWorkspaceMembersWithEmail(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkspaceMembersWithEmail", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).GetWorkspaceMembersWithEmail), arg0, arg1)
}

// InviteMember mocks base method.
func (m *MockWorkspaceServiceInterface) InviteMember(arg0 context.Context, arg1, arg2 string) (*domain.WorkspaceInvitation, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InviteMember", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.WorkspaceInvitation)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// InviteMember indicates an expected call of InviteMember.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) InviteMember(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InviteMember", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).InviteMember), arg0, arg1, arg2)
}

// ListWorkspaces mocks base method.
func (m *MockWorkspaceServiceInterface) ListWorkspaces(arg0 context.Context) ([]*domain.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWorkspaces", arg0)
	ret0, _ := ret[0].([]*domain.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWorkspaces indicates an expected call of ListWorkspaces.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) ListWorkspaces(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWorkspaces", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).ListWorkspaces), arg0)
}

// RemoveMember mocks base method.
func (m *MockWorkspaceServiceInterface) RemoveMember(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveMember", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveMember indicates an expected call of RemoveMember.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) RemoveMember(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveMember", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).RemoveMember), arg0, arg1, arg2)
}

// RemoveUserFromWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) RemoveUserFromWorkspace(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUserFromWorkspace", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveUserFromWorkspace indicates an expected call of RemoveUserFromWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) RemoveUserFromWorkspace(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUserFromWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).RemoveUserFromWorkspace), arg0, arg1, arg2)
}

// TransferOwnership mocks base method.
func (m *MockWorkspaceServiceInterface) TransferOwnership(arg0 context.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferOwnership", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransferOwnership indicates an expected call of TransferOwnership.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) TransferOwnership(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferOwnership", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).TransferOwnership), arg0, arg1, arg2, arg3)
}

// UpdateIntegration mocks base method.
func (m *MockWorkspaceServiceInterface) UpdateIntegration(arg0 context.Context, arg1, arg2, arg3 string, arg4 domain.EmailProvider) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateIntegration", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateIntegration indicates an expected call of UpdateIntegration.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) UpdateIntegration(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateIntegration", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).UpdateIntegration), arg0, arg1, arg2, arg3, arg4)
}

// UpdateWorkspace mocks base method.
func (m *MockWorkspaceServiceInterface) UpdateWorkspace(arg0 context.Context, arg1, arg2 string, arg3 domain.WorkspaceSettings) (*domain.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWorkspace", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWorkspace indicates an expected call of UpdateWorkspace.
func (mr *MockWorkspaceServiceInterfaceMockRecorder) UpdateWorkspace(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWorkspace", reflect.TypeOf((*MockWorkspaceServiceInterface)(nil).UpdateWorkspace), arg0, arg1, arg2, arg3)
}
