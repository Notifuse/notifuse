// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/domain (interfaces: MailjetServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockMailjetServiceInterface is a mock of MailjetServiceInterface interface.
type MockMailjetServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMailjetServiceInterfaceMockRecorder
}

// MockMailjetServiceInterfaceMockRecorder is the mock recorder for MockMailjetServiceInterface.
type MockMailjetServiceInterfaceMockRecorder struct {
	mock *MockMailjetServiceInterface
}

// NewMockMailjetServiceInterface creates a new mock instance.
func NewMockMailjetServiceInterface(ctrl *gomock.Controller) *MockMailjetServiceInterface {
	mock := &MockMailjetServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMailjetServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMailjetServiceInterface) EXPECT() *MockMailjetServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateWebhook mocks base method.
func (m *MockMailjetServiceInterface) CreateWebhook(arg0 context.Context, arg1 domain.MailjetSettings, arg2 domain.MailjetWebhook) (*domain.MailjetWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.MailjetWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWebhook indicates an expected call of CreateWebhook.
func (mr *MockMailjetServiceInterfaceMockRecorder) CreateWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWebhook", reflect.TypeOf((*MockMailjetServiceInterface)(nil).CreateWebhook), arg0, arg1, arg2)
}

// DeleteWebhook mocks base method.
func (m *MockMailjetServiceInterface) DeleteWebhook(arg0 context.Context, arg1 domain.MailjetSettings, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWebhook indicates an expected call of DeleteWebhook.
func (mr *MockMailjetServiceInterfaceMockRecorder) DeleteWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWebhook", reflect.TypeOf((*MockMailjetServiceInterface)(nil).DeleteWebhook), arg0, arg1, arg2)
}

// GetWebhook mocks base method.
func (m *MockMailjetServiceInterface) GetWebhook(arg0 context.Context, arg1 domain.MailjetSettings, arg2 int64) (*domain.MailjetWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.MailjetWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWebhook indicates an expected call of GetWebhook.
func (mr *MockMailjetServiceInterfaceMockRecorder) GetWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebhook", reflect.TypeOf((*MockMailjetServiceInterface)(nil).GetWebhook), arg0, arg1, arg2)
}

// ListWebhooks mocks base method.
func (m *MockMailjetServiceInterface) ListWebhooks(arg0 context.Context, arg1 domain.MailjetSettings) (*domain.MailjetWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWebhooks", arg0, arg1)
	ret0, _ := ret[0].(*domain.MailjetWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWebhooks indicates an expected call of ListWebhooks.
func (mr *MockMailjetServiceInterfaceMockRecorder) ListWebhooks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWebhooks", reflect.TypeOf((*MockMailjetServiceInterface)(nil).ListWebhooks), arg0, arg1)
}

// UpdateWebhook mocks base method.
func (m *MockMailjetServiceInterface) UpdateWebhook(arg0 context.Context, arg1 domain.MailjetSettings, arg2 int64, arg3 domain.MailjetWebhook) (*domain.MailjetWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWebhook", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.MailjetWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWebhook indicates an expected call of UpdateWebhook.
func (mr *MockMailjetServiceInterfaceMockRecorder) UpdateWebhook(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWebhook", reflect.TypeOf((*MockMailjetServiceInterface)(nil).UpdateWebhook), arg0, arg1, arg2, arg3)
}
