// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/domain (interfaces: TemplateService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	notifuse_mjml "github.com/Notifuse/notifuse/pkg/notifuse_mjml"
	gomock "github.com/golang/mock/gomock"
)

// MockTemplateService is a mock of TemplateService interface.
type MockTemplateService struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateServiceMockRecorder
}

// MockTemplateServiceMockRecorder is the mock recorder for MockTemplateService.
type MockTemplateServiceMockRecorder struct {
	mock *MockTemplateService
}

// NewMockTemplateService creates a new mock instance.
func NewMockTemplateService(ctrl *gomock.Controller) *MockTemplateService {
	mock := &MockTemplateService{ctrl: ctrl}
	mock.recorder = &MockTemplateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTemplateService) EXPECT() *MockTemplateServiceMockRecorder {
	return m.recorder
}

// CompileTemplate mocks base method.
func (m *MockTemplateService) CompileTemplate(arg0 context.Context, arg1 notifuse_mjml.CompileTemplateRequest) (*notifuse_mjml.CompileTemplateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompileTemplate", arg0, arg1)
	ret0, _ := ret[0].(*notifuse_mjml.CompileTemplateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CompileTemplate indicates an expected call of CompileTemplate.
func (mr *MockTemplateServiceMockRecorder) CompileTemplate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompileTemplate", reflect.TypeOf((*MockTemplateService)(nil).CompileTemplate), arg0, arg1)
}

// CreateTemplate mocks base method.
func (m *MockTemplateService) CreateTemplate(arg0 context.Context, arg1 string, arg2 *domain.Template) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTemplate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTemplate indicates an expected call of CreateTemplate.
func (mr *MockTemplateServiceMockRecorder) CreateTemplate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTemplate", reflect.TypeOf((*MockTemplateService)(nil).CreateTemplate), arg0, arg1, arg2)
}

// DeleteTemplate mocks base method.
func (m *MockTemplateService) DeleteTemplate(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTemplate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTemplate indicates an expected call of DeleteTemplate.
func (mr *MockTemplateServiceMockRecorder) DeleteTemplate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTemplate", reflect.TypeOf((*MockTemplateService)(nil).DeleteTemplate), arg0, arg1, arg2)
}

// GetTemplateByID mocks base method.
func (m *MockTemplateService) GetTemplateByID(arg0 context.Context, arg1, arg2 string, arg3 int64) (*domain.Template, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemplateByID", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.Template)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTemplateByID indicates an expected call of GetTemplateByID.
func (mr *MockTemplateServiceMockRecorder) GetTemplateByID(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplateByID", reflect.TypeOf((*MockTemplateService)(nil).GetTemplateByID), arg0, arg1, arg2, arg3)
}

// GetTemplates mocks base method.
func (m *MockTemplateService) GetTemplates(arg0 context.Context, arg1, arg2 string) ([]*domain.Template, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemplates", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*domain.Template)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTemplates indicates an expected call of GetTemplates.
func (mr *MockTemplateServiceMockRecorder) GetTemplates(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplates", reflect.TypeOf((*MockTemplateService)(nil).GetTemplates), arg0, arg1, arg2)
}

// UpdateTemplate mocks base method.
func (m *MockTemplateService) UpdateTemplate(arg0 context.Context, arg1 string, arg2 *domain.Template) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTemplate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTemplate indicates an expected call of UpdateTemplate.
func (mr *MockTemplateServiceMockRecorder) UpdateTemplate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTemplate", reflect.TypeOf((*MockTemplateService)(nil).UpdateTemplate), arg0, arg1, arg2)
}
