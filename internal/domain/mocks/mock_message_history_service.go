// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/domain (interfaces: MessageHistoryService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockMessageHistoryService is a mock of MessageHistoryService interface.
type MockMessageHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockMessageHistoryServiceMockRecorder
}

// MockMessageHistoryServiceMockRecorder is the mock recorder for MockMessageHistoryService.
type MockMessageHistoryServiceMockRecorder struct {
	mock *MockMessageHistoryService
}

// NewMockMessageHistoryService creates a new mock instance.
func NewMockMessageHistoryService(ctrl *gomock.Controller) *MockMessageHistoryService {
	mock := &MockMessageHistoryService{ctrl: ctrl}
	mock.recorder = &MockMessageHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageHistoryService) EXPECT() *MockMessageHistoryServiceMockRecorder {
	return m.recorder
}

// ListMessages mocks base method.
func (m *MockMessageHistoryService) ListMessages(arg0 context.Context, arg1 string, arg2 domain.MessageListParams) (*domain.MessageListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMessages", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.MessageListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMessages indicates an expected call of ListMessages.
func (mr *MockMessageHistoryServiceMockRecorder) ListMessages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMessages", reflect.TypeOf((*MockMessageHistoryService)(nil).ListMessages), arg0, arg1, arg2)
}
