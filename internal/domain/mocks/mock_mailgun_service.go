// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Notifuse/notifuse/internal/domain (interfaces: MailgunServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Notifuse/notifuse/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockMailgunServiceInterface is a mock of MailgunServiceInterface interface.
type MockMailgunServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMailgunServiceInterfaceMockRecorder
}

// MockMailgunServiceInterfaceMockRecorder is the mock recorder for MockMailgunServiceInterface.
type MockMailgunServiceInterfaceMockRecorder struct {
	mock *MockMailgunServiceInterface
}

// NewMockMailgunServiceInterface creates a new mock instance.
func NewMockMailgunServiceInterface(ctrl *gomock.Controller) *MockMailgunServiceInterface {
	mock := &MockMailgunServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMailgunServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMailgunServiceInterface) EXPECT() *MockMailgunServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateWebhook mocks base method.
func (m *MockMailgunServiceInterface) CreateWebhook(arg0 context.Context, arg1 domain.MailgunSettings, arg2 domain.MailgunWebhook) (*domain.MailgunWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.MailgunWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWebhook indicates an expected call of CreateWebhook.
func (mr *MockMailgunServiceInterfaceMockRecorder) CreateWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWebhook", reflect.TypeOf((*MockMailgunServiceInterface)(nil).CreateWebhook), arg0, arg1, arg2)
}

// DeleteWebhook mocks base method.
func (m *MockMailgunServiceInterface) DeleteWebhook(arg0 context.Context, arg1 domain.MailgunSettings, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWebhook indicates an expected call of DeleteWebhook.
func (mr *MockMailgunServiceInterfaceMockRecorder) DeleteWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWebhook", reflect.TypeOf((*MockMailgunServiceInterface)(nil).DeleteWebhook), arg0, arg1, arg2)
}

// GetWebhook mocks base method.
func (m *MockMailgunServiceInterface) GetWebhook(arg0 context.Context, arg1 domain.MailgunSettings, arg2 string) (*domain.MailgunWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebhook", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.MailgunWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWebhook indicates an expected call of GetWebhook.
func (mr *MockMailgunServiceInterfaceMockRecorder) GetWebhook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebhook", reflect.TypeOf((*MockMailgunServiceInterface)(nil).GetWebhook), arg0, arg1, arg2)
}

// ListWebhooks mocks base method.
func (m *MockMailgunServiceInterface) ListWebhooks(arg0 context.Context, arg1 domain.MailgunSettings) (*domain.MailgunWebhookListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWebhooks", arg0, arg1)
	ret0, _ := ret[0].(*domain.MailgunWebhookListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWebhooks indicates an expected call of ListWebhooks.
func (mr *MockMailgunServiceInterfaceMockRecorder) ListWebhooks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWebhooks", reflect.TypeOf((*MockMailgunServiceInterface)(nil).ListWebhooks), arg0, arg1)
}

// TestWebhook mocks base method.
func (m *MockMailgunServiceInterface) TestWebhook(arg0 context.Context, arg1 domain.MailgunSettings, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestWebhook", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// TestWebhook indicates an expected call of TestWebhook.
func (mr *MockMailgunServiceInterfaceMockRecorder) TestWebhook(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestWebhook", reflect.TypeOf((*MockMailgunServiceInterface)(nil).TestWebhook), arg0, arg1, arg2, arg3)
}

// UpdateWebhook mocks base method.
func (m *MockMailgunServiceInterface) UpdateWebhook(arg0 context.Context, arg1 domain.MailgunSettings, arg2 string, arg3 domain.MailgunWebhook) (*domain.MailgunWebhook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWebhook", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.MailgunWebhook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWebhook indicates an expected call of UpdateWebhook.
func (mr *MockMailgunServiceInterfaceMockRecorder) UpdateWebhook(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWebhook", reflect.TypeOf((*MockMailgunServiceInterface)(nil).UpdateWebhook), arg0, arg1, arg2, arg3)
}
