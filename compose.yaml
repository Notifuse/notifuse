services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8081:8080'
    environment:
      # Server Configuration
      - SERVER_PORT=${SERVER_PORT:-8080}
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - ENVIRONMENT=${ENVIRONMENT:-development}

      # Database Configuration (Required)
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_PREFIX=${DB_PREFIX:-notifuse}
      - DB_NAME=${DB_NAME:-notifuse_system}
      - DB_SSLMODE=${DB_SSLMODE:-disable}

      # Secret Key (Required) - Generate a secure random string for production
      - SECRET_KEY=${SECRET_KEY:-d04zCk3Fa45oOjDWHpAvc1AZxnLdGffOnNWK+Jt2yXf37+FTfuMMHb8flcfPMqLluRR3rvhbr555r6j1DEigrA==}

      # All other settings (ROOT_EMAIL, API_ENDPOINT, SMTP, PASETO keys)
      # can be configured through the Setup Wizard on first launch
      # Or set them here as environment variables if you prefer
      # - ROOT_EMAIL=${ROOT_EMAIL}
      # - API_ENDPOINT=${API_ENDPOINT}
      # - PASETO_PRIVATE_KEY=${PASETO_PRIVATE_KEY}
      # - PASETO_PUBLIC_KEY=${PASETO_PUBLIC_KEY}
      # - SMTP_HOST=${SMTP_HOST}
      # - SMTP_PORT=${SMTP_PORT}
      # - SMTP_USERNAME=${SMTP_USERNAME}
      # - SMTP_PASSWORD=${SMTP_PASSWORD}
      # - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      # - SMTP_FROM_NAME=${SMTP_FROM_NAME}
    depends_on:
      - postgres
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - notifuse-network

  postgres:
    image: postgres:17-alpine
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - notifuse-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    driver: local

networks:
  notifuse-network:
    driver: bridge
